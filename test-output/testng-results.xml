<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<br>]]>
    </line>
    <line>
      <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg"><img height=200 width=200 src="Área de Trabalho\error.jpg"></a>]]>
    </line>
    <line>
      <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg" target="_blank">Screenshot link</a>]]>
    </line>
    <line>
      <![CDATA[<br>]]>
    </line>
    <line>
      <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg"><img height=200 width=200 src="Área de Trabalho\error.jpg"></a>]]>
    </line>
  </reporter-output>
  <suite started-at="2021-11-14T23:00:55 BRT" name="Functional Suite" finished-at="2021-11-14T23:00:55 BRT" duration-ms="138">
    <groups>
      <group name="bvt">
        <method signature="TestCase3.forthTest()[pri:4, instance:testNGLearning.TestCase3@4f32a3ad]" name="forthTest" class="testNGLearning.TestCase3"/>
      </group> <!-- bvt -->
      <group name="functional">
        <method signature="TestCase1.doLogin()[pri:2, instance:testNGLearning.TestCase1@402c4085]" name="doLogin" class="testNGLearning.TestCase1"/>
        <method signature="TestCase1.doRegister()[pri:1, instance:testNGLearning.TestCase1@402c4085]" name="doRegister" class="testNGLearning.TestCase1"/>
        <method signature="TestCase3.doRegister()[pri:1, instance:testNGLearning.TestCase3@4f32a3ad]" name="doRegister" class="testNGLearning.TestCase3"/>
        <method signature="TestCase3.doLogin()[pri:2, instance:testNGLearning.TestCase3@4f32a3ad]" name="doLogin" class="testNGLearning.TestCase3"/>
        <method signature="TestCase3.thirdTest()[pri:3, instance:testNGLearning.TestCase3@4f32a3ad]" name="thirdTest" class="testNGLearning.TestCase3"/>
      </group> <!-- functional -->
      <group name="smoke">
        <method signature="TestCase2.validateTitles()[pri:0, instance:testNGLearning.TestCase2@4a8355dd]" name="validateTitles" class="testNGLearning.TestCase2"/>
        <method signature="TestCase3.doRegister()[pri:1, instance:testNGLearning.TestCase3@4f32a3ad]" name="doRegister" class="testNGLearning.TestCase3"/>
        <method signature="TestCase3.doLogin()[pri:2, instance:testNGLearning.TestCase3@4f32a3ad]" name="doLogin" class="testNGLearning.TestCase3"/>
        <method signature="TestCase3.thirdTest()[pri:3, instance:testNGLearning.TestCase3@4f32a3ad]" name="thirdTest" class="testNGLearning.TestCase3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-11-14T23:00:55 BRT" name="Login Test" finished-at="2021-11-14T23:00:55 BRT" duration-ms="43">
      <class name="testNGLearning.TestCase1">
        <test-method is-config="true" signature="creatingDBConnection()[pri:0, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="creatingDBConnection" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatingDBConnection -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="launchBrowser" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="doRegister()[pri:1, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="doRegister" finished-at="2021-11-14T23:00:55 BRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegister -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="closeBrowser" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="launchBrowser" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="doLogin()[pri:2, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="doLogin" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="closeBrowser" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="closeDBConnection()[pri:0, instance:testNGLearning.TestCase1@402c4085]" started-at="2021-11-14T23:00:55 BRT" name="closeDBConnection" finished-at="2021-11-14T23:00:55 BRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDBConnection -->
      </class> <!-- testNGLearning.TestCase1 -->
    </test> <!-- Login Test -->
    <test started-at="2021-11-14T23:00:55 BRT" name="Failure Test" finished-at="2021-11-14T23:00:55 BRT" duration-ms="10">
      <class name="testNGLearning.TestFailure">
        <test-method signature="doLogin()[pri:0, instance:testNGLearning.TestFailure@723ca036]" started-at="2021-11-14T23:00:55 BRT" name="doLogin" finished-at="2021-11-14T23:00:55 BRT" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing the login test]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing the login test
at org.junit.Assert.fail(Assert.java:89)
at testNGLearning.TestFailure.doLogin(TestFailure.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg" target="_blank">Screenshot link</a>]]>
            </line>
            <line>
              <![CDATA[<br>]]>
            </line>
            <line>
              <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg"><img height=200 width=200 src="Área de Trabalho\error.jpg"></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- doLogin -->
      </class> <!-- testNGLearning.TestFailure -->
    </test> <!-- Failure Test -->
    <test started-at="2021-11-14T23:00:55 BRT" name="Validate Title Test" finished-at="2021-11-14T23:00:55 BRT" duration-ms="9">
      <class name="testNGLearning.TestCase2">
        <test-method signature="validateTitles()[pri:0, instance:testNGLearning.TestCase2@4a8355dd]" started-at="2021-11-14T23:00:55 BRT" name="validateTitles" finished-at="2021-11-14T23:00:55 BRT" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
image not present expected [false] but found [true],
text box not present expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
image not present expected [false] but found [true],
text box not present expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testNGLearning.TestCase2.validateTitles(TestCase2.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg" target="_blank">Screenshot link</a>]]>
            </line>
            <line>
              <![CDATA[<br>]]>
            </line>
            <line>
              <![CDATA[<a href="https://static-cse.canva.com/blob/183497/Canva-Photographer-Works-with-His-DSLR-Camera.004c8572.jpg"><img height=200 width=200 src="Área de Trabalho\error.jpg"></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTitles -->
      </class> <!-- testNGLearning.TestCase2 -->
    </test> <!-- Validate Title Test -->
    <test started-at="2021-11-14T23:00:55 BRT" name="Dependency Test" finished-at="2021-11-14T23:00:55 BRT" duration-ms="9">
      <class name="testNGLearning.TestCase3">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testNGLearning.TestCase3@4f32a3ad]" started-at="2021-11-14T23:00:55 BRT" name="setUp" finished-at="2021-11-14T23:00:55 BRT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="doRegister()[pri:1, instance:testNGLearning.TestCase3@4f32a3ad]" started-at="2021-11-14T23:00:55 BRT" name="doRegister" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegister -->
        <test-method signature="doLogin()[pri:2, instance:testNGLearning.TestCase3@4f32a3ad]" started-at="2021-11-14T23:00:55 BRT" name="doLogin" finished-at="2021-11-14T23:00:55 BRT" depends-on-methods="testNGLearning.TestCase3.doRegister" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method signature="thirdTest()[pri:3, instance:testNGLearning.TestCase3@4f32a3ad]" started-at="2021-11-14T23:00:55 BRT" name="thirdTest" finished-at="2021-11-14T23:00:55 BRT" depends-on-methods="testNGLearning.TestCase3.doRegister" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdTest -->
        <test-method signature="forthTest()[pri:4, instance:testNGLearning.TestCase3@4f32a3ad]" started-at="2021-11-14T23:00:55 BRT" name="forthTest" finished-at="2021-11-14T23:00:55 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forthTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testNGLearning.TestCase3@4f32a3ad]" started-at="2021-11-14T23:00:55 BRT" name="tearDown" finished-at="2021-11-14T23:00:55 BRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testNGLearning.TestCase3 -->
    </test> <!-- Dependency Test -->
  </suite> <!-- Functional Suite -->
</testng-results>
